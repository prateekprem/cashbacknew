#ifndef TARGET_OS_SIMULATOR
#include <TargetConditionals.h>
#endif
#if TARGET_OS_SIMULATOR
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.1 effective-4.2 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <MapmyIndiaAPIKit/MapmyIndiaAPIKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MapmyIndiaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasOAuth")
@interface AtlasOAuth : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, readonly, copy) NSString * _Nonnull authorizationFormattedValue;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable scope;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable tokenType;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable accessToken;
/// The house/building name name of the placemark.
@property (nonatomic, strong) NSNumber * _Nullable expiresIn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasVectorKey")
@interface MBAtlasVectorKey : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The vector key to fetch map tiles.
@property (nonatomic, copy) NSString * _Nullable publicKey;
/// The expiry time of vector map key.
@property (nonatomic, strong) NSNumber * _Nullable expiresOn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@class NSError;

/// A MMIAtlasManager object that allows you to query MapmyIndia OAuth and Vector Map Public Key.
SWIFT_CLASS_NAMED("MMIAtlasManager")
@interface MMIAtlasManager : NSObject
/// The shared MMIAtlasManager object.
/// To use this object, a <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKkey</a> should be specified in the <code>MapmyIndiaSDKKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MMIAtlasManager * _Nonnull sharedManager;)
+ (MMIAtlasManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MMIAtlasManager object with SDKKey.
/// \param SDKKey A <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKKey</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MMIAtlasManager object with an optional SDKKey.
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey;
/// Submits a atlas request for vector puplic key to get result in bool value.
/// \param completionHandler The closure (block) to call with the result. This closure is executed on the application’s main thread.
///
- (void)getResultForVectoKey:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
- (void)saveVectorMapPublicKey:(MBAtlasVectorKey * _Nullable)vectorKeys;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaAddressTokens")
@interface MapmyIndiaAddressTokens : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodePlacemark;

/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeAPIResponse")
@interface MapmyIndiaAtlasGeocodeAPIResponse : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The array of atlas geocode objects.
@property (nonatomic, copy) NSArray<MapmyIndiaAtlasGeocodePlacemark *> * _Nullable placemarks;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodeOptions;
@class NSURLSessionDataTask;

/// A MapmyIndiaAtlasGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Atlas Geocode API</a>. The query takes take address and returns a geographic location i.e coordinate of a location and other details.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeManager")
@interface MapmyIndiaAtlasGeocodeManager : NSObject
/// The shared MapmyIndiaAtlasGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAtlasGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaAtlasGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAtlasGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param clientId A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientId</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientId</code> key in the main application bundle’s Info.plist.
///
/// \param clientSecret A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientSecret</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientSecret</code> key in the main application bundle’s Info.plist.
///
/// \param grantType Set its value to ‘client_credentials’.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAtlasGeocodeManager object with an optional access token.
/// The MapmyIndiaAtlasGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getGeocodeResultsWithOptions:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaAtlasGeocodeAPIResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Atlas APIs.
/// You do not create instances of <code>AtlasOptions</code> directly. Instead, you create instances of <code>AtlasAutoSuggestOptions</code> and <code>AtlasNearbyOptions</code>, depending on the kind of operation you want to perform:
SWIFT_CLASS_NAMED("MapmyIndiaAtlasOptions")
@interface MapmyIndiaAtlasOptions : NSObject
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for atlas geocoding results. Geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeOptions")
@interface MapmyIndiaAtlasGeocodeOptions : MapmyIndiaAtlasOptions
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodePlacemark")
@interface MapmyIndiaAtlasGeocodePlacemark : MapmyIndiaAddressTokens
@property (nonatomic, readonly) NSUInteger hash;
/// The address of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The unique code of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The latitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The level of search of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable geocodeLevel;
@end



/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaSuggestion")
@interface MapmyIndiaSuggestion : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable type;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable typeX;
/// The address of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeAddress;
/// The latitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The unique code of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The name of place according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeName;
/// The index according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable orderIndex;
@property (nonatomic, strong) NSNumber * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable landlineNo;
@property (nonatomic, copy) NSString * _Nullable mobileNo;
/// This will contains all details of place if requested using API.
@property (nonatomic, strong) MapmyIndiaAddressTokens * _Nullable addressTokens;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasSuggestion")
@interface MapmyIndiaAtlasSuggestion : MapmyIndiaSuggestion
@end

@class MapmyIndiaSearchFilter;

/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSearchAtlasOptions")
@interface MapmyIndiaAutoSearchAtlasOptions : MapmyIndiaAtlasOptions
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) NSNumber * _Nullable zoom;
/// It allows to get tokenize address in response.
@property (nonatomic) BOOL includeTokenizeAddress;
/// On basis of this only specific type of response returned.
@property (nonatomic) MMIPodTypeIdentifier _Nonnull pod;
/// On basis of this only specific type of response returned.
@property (nonatomic, strong) MapmyIndiaSearchFilter * _Nullable filter;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaAutoSuggestManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaAutoSuggestManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaAutoSuggestManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSuggestManager")
@interface MapmyIndiaAutoSuggestManager : NSObject
/// The shared MapmyIndiaAutoSuggestManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAutoSuggestManager * _Nonnull sharedManager;)
+ (MapmyIndiaAutoSuggestManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAutoSuggestManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAutoSuggestManager object with an optional access token.
/// The MapmyIndiaAutoSuggestManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>.
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getAutoSuggestionsWithOptions:(MapmyIndiaAutoSearchAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaSearchFilter")
@interface MapmyIndiaSearchFilter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRectangularRegion;

SWIFT_CLASS_NAMED("MapmyIndiaBoundsFilter")
@interface MapmyIndiaBoundsFilter : MapmyIndiaSearchFilter
/// Initializes bounds filter object with the given bounds.
- (nonnull instancetype)initWithBounds:(MapmyIndiaRectangularRegion * _Nonnull)bounds;
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistance")
@interface MapmyIndiaDrivingDistance : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceOptions;
@class MapmyIndiaDrivingDistancePlacemark;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceManager")
@interface MapmyIndiaDrivingDistanceManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaDrivingDistancePlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrix")
@interface MapmyIndiaDrivingDistanceMatrix : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durationsAPI;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distancesAPI;
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durations;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distances;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceMatrixOptions;
@class MapmyIndiaDrivingDistanceMatrixResponse;

/// A MapmyIndiaDrivingDistanceMatrixManager object that allows you to query the [MapmyIndia distance matrix and distance matric eta API]
/// The MapmyIndiaDrivingDistanceMatrixManager object allows you to perform get distance of different locations from a location.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixManager")
@interface MapmyIndiaDrivingDistanceMatrixManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceMatrixManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceMatrixManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceMatrixManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaDrivingDistanceMatrixResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForDistanceMatrix:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Geocoding API.
/// You do not create instances of <code>GeocodeOptions</code> directly. Instead, you create instances of <code>ForwardGeocodeOptions</code> and <code>ReverseGeocodeOptions</code>, depending on the kind of geocoding you want to perform:
/// <ul>
///   <li>
///     <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. To perform forward geocoding, use a <code>ForwardGeocodeOptions</code> object.
///   </li>
///   <li>
///     <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location. To perform reverse geocoding, use a <code>ReverseGeocodeOptions</code> object.
///   </li>
/// </ul>
/// Pass an instance of either class into the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeOptions")
@interface MapmyIndiaGeocodeOptions : NSObject
/// By default, no country codes are specified.
/// To find out what kinds of results are available for a particular country, consult [the Geocoding API’s coverage map].
@property (nonatomic, copy) NSArray<NSString *> * _Nullable allowedISOCountryCodes;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable focalLocation;
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for distance matrix results. It takes a human-readable query, such as source location and secondary locations, and produces any number of results that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixOptions")
@interface MapmyIndiaDrivingDistanceMatrixOptions : MapmyIndiaGeocodeOptions
/// A location from which the distance will be calculated. It is taken as the source from which distance and ETA is to be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// Points provides the locations to which distance will be calculated from center.
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
/// Type of route Quickest/Optimal or Shortest.
@property (nonatomic) MMIDistanceRouteType routeType;
/// This will be used to get the duration considering live traffic; applicable for “India” region only and routeType shortest is not supported.
@property (nonatomic) BOOL withTraffic;
/// Initializes a distance matrix options object with the given query string.
/// \param center A location from which the distance will be calculated.
///
/// \param points Points to which distance will be calculated from center.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaDrivingDistanceMatrixResults;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResponse")
@interface MapmyIndiaDrivingDistanceMatrixResponse : NSObject
@property (nonatomic, strong) NSNumber * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, strong) MapmyIndiaDrivingDistanceMatrixResults * _Nullable results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>MapmyIndiaDrivingDistanceMatrix</code> to represent results of distance matrix requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResults")
@interface MapmyIndiaDrivingDistanceMatrixResults : MapmyIndiaDrivingDistanceMatrix
@end


SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceOptions")
@interface MapmyIndiaDrivingDistanceOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the distance will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// points provides the locations to which distance will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withTraffic;
/// Initializes a driving distance options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points;
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistancePlacemark")
@interface MapmyIndiaDrivingDistancePlacemark : MapmyIndiaDrivingDistance
@end


SWIFT_CLASS_NAMED("MapmyIndiaElocFilter")
@interface MapmyIndiaElocFilter : MapmyIndiaSearchFilter
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaForwardGeocodeOptions")
@interface MapmyIndiaForwardGeocodeOptions : MapmyIndiaGeocodeOptions
/// This parameter “pincode” will be used to filter out results on basis of pincode
@property (nonatomic, copy) NSString * _Nullable pincode;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaGeocodedPlacemark;

/// A MapmyIndiaGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeManager")
@interface MapmyIndiaGeocodeManager : NSObject
/// The shared MapmyIndiaGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token.
/// The MapmyIndiaGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)geocodeWithOptions:(MapmyIndiaForwardGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaPlacemark")
@interface MapmyIndiaPlacemark : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poiDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable streetDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
@property (nonatomic, readonly, copy) NSString * _Nullable latitude;
@property (nonatomic, readonly, copy) NSString * _Nullable longitude;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable area;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable placeId;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodedPlacemark")
@interface MapmyIndiaGeocodedPlacemark : MapmyIndiaPlacemark
@end

@class MapmyIndiaNearbyAtlasOptions;

/// A MapmyIndiaNearByManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaNearByManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaNearByManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaNearByManager")
@interface MapmyIndiaNearByManager : NSObject
/// The shared MapmyIndiaNearByManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaNearByManager * _Nonnull sharedManager;)
+ (MapmyIndiaNearByManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaNearByManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaNearByManager object with an optional access token.
/// The MapmyIndiaNearByManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getNearBySuggestionsWithOptions:(MapmyIndiaNearbyAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaNearbyAtlasOptions")
@interface MapmyIndiaNearbyAtlasOptions : MapmyIndiaAtlasOptions
/// A location provides the location around which the search will be performed.
@property (nonatomic, strong) CLLocation * _Nullable refLocation;
/// A page provides number of the page to provide results from.
@property (nonatomic, strong) NSNumber * _Nullable page;
/// radius provides the range of distance to search
@property (nonatomic, strong) NSNumber * _Nullable radius;
/// sort provides the range of distance to search
@property (nonatomic, copy) NSString * _Nullable sort;
/// bounds provides the range of distance to search
@property (nonatomic, strong) MapmyIndiaRectangularRegion * _Nullable bounds;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query location:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A structure that specifies the criteria for oAuth results.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthAtlasOptions")
@interface MapmyIndiaOAuthAtlasOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable grantType;
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSString * _Nullable clientSecret;
/// Initializes a OAuth options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithGrantType:(NSString * _Nonnull)grantType clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A MapmyIndiaOAuthManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaOAuthManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaOAuthManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthManager")
@interface MapmyIndiaOAuthManager : NSObject
/// The shared MapmyIndiaOAuthManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaOAuthManager * _Nonnull sharedOAuthManager;)
+ (MapmyIndiaOAuthManager * _Nonnull)sharedOAuthManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithClientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token.
/// The MapmyIndiaOAuthManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)init;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getOAuthTokenWithOptions:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(AtlasOAuth * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailGeocodeOptions")
@interface MapmyIndiaPlaceDetailGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaPlaceDetailManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaPlaceDetailManager object allows you to perform place detail geocoding. It takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
/// Each result produced by the MapmyIndiaPlaceDetailManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailManager")
@interface MapmyIndiaPlaceDetailManager : NSObject
/// The shared MapmyIndiaPlaceDetailManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaPlaceDetailManager * _Nonnull sharedManager;)
+ (MapmyIndiaPlaceDetailManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token.
/// The MapmyIndiaPlaceDetailManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getPlaceDetailWithOptions:(MapmyIndiaPlaceDetailGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class NSCoder;

/// The <code>RectangularRegion</code> class defines a rectangular bounding box for a geographic region.
SWIFT_CLASS_NAMED("MapmyIndiaRectangularRegion")
@interface MapmyIndiaRectangularRegion : CLRegion
/// Coordinate at the bottomRight corner.
@property (nonatomic) CLLocationCoordinate2D bottomRight;
/// Coordinate at the northeast corner.
@property (nonatomic) CLLocationCoordinate2D topLeft;
/// Creates a rectangular region with the given southwest and northeast corners.
/// <code>southWest</code> must be to the southwest of <code>northEast</code>. The region may not span the antimeridian. If you need to restrict a query to a region that spans the antimeridian, such as the region that encompasses Fiji, perform two queries each limited to the region on either side of the antimeridian, then combine the results.
/// \param southWest The southwesternmost geographic coordinate that lies within the region.
///
/// \param northEast The northeasternmost geographic coordinate that lies within the region.
///
- (nonnull instancetype)initWithTopLeft:(CLLocationCoordinate2D)topLeft bottomRight:(CLLocationCoordinate2D)bottomRight OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns a Boolean value indicating whether the bounding box contains the specified coordinate.
- (BOOL)containsLocationCoordinate2D:(CLLocationCoordinate2D)coordinate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaReverseGeocodeOptions;

/// A MapmyIndiaReverseGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaReverseGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaReverseGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeManager")
@interface MapmyIndiaReverseGeocodeManager : NSObject
/// The shared MapmyIndiaReverseGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaReverseGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaReverseGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token.
/// The MapmyIndiaReverseGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)reverseGeocodeWithOptions:(MapmyIndiaReverseGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for reverse geocoding results. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeOptions")
@interface MapmyIndiaReverseGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a reverse geocode options object with the given coordinate pair.
/// \param coordinate A coordinate pair to search for.
///
- (nonnull instancetype)initWithCoordinate:(CLLocationCoordinate2D)coordinate withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
/// Initializes a reverse geocode options object with the given <code>CLLocation</code> object.
/// \param location A <code>CLLocation</code> object to search for.
///
- (nonnull instancetype)initWithLocation:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaTripAdvice;

SWIFT_CLASS_NAMED("MapmyIndiaRouteTrip")
@interface MapmyIndiaRouteTrip : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<MapmyIndiaTripAdvice *> * _Nullable advices;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable pts;
@property (nonatomic, readonly, copy) NSString * _Nullable durationFormatted;
@property (nonatomic, readonly, copy) NSArray<NSValue *> * _Nullable coordinates;
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nullable locations;
/// The number of coordinates.
/// The value of this property may be zero or reduced depending on the object.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates.count</code> property.
@property (nonatomic, readonly) NSUInteger coordinateCount;
/// Retrieves the coordinates.
/// The array may be empty or simplified.
/// precondition:
/// <code>coordinates</code> must be large enough to hold <code>coordinateCount</code> instances of <code>CLLocationCoordinate2D</code>.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates</code> property.
/// \param coordinates A pointer to a C array of <code>CLLocationCoordinate2D</code> instances. On output, this array contains all the vertices of the overlay.
///
- (void)getCoordinates:(CLLocationCoordinate2D * _Nonnull)coordinates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRouteTripOptions;
@class MapmyIndiaTripResult;

/// A MapmyIndiaRouteTripManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/route-api">MapmyIndia route API</a>
/// The MapmyIndiaRouteTripManager object allows you to perform get route betwweeb locations.
SWIFT_CLASS_NAMED("MapmyIndiaRouteTripManager")
@interface MapmyIndiaRouteTripManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaRouteTripManager * _Nonnull sharedManager;)
+ (MapmyIndiaRouteTripManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token.
/// The MapmyIndiaRouteTripManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaRouteTripOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaTripResult * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaRouteTripOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaRouteTripOptions")
@interface MapmyIndiaRouteTripOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable startLocation;
/// A location provides the location to which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable destinationLocation;
/// locations via which route will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable viaPoints;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withAlternatives;
@property (nonatomic) BOOL withAdvices;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithStartLocation:(CLLocation * _Nonnull)startLocation destinationLocation:(CLLocation * _Nonnull)destinationLocation;
@end




SWIFT_CLASS_NAMED("MapmyIndiaTrip")
@interface MapmyIndiaTrip : MapmyIndiaRouteTrip
@end

@class MapmyIndiaTripAdvicePoint;

SWIFT_CLASS_NAMED("MapmyIndiaTripAdvice")
@interface MapmyIndiaTripAdvice : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable exitNR;
@property (nonatomic, strong) NSNumber * _Nullable iconId;
@property (nonatomic, strong) NSNumber * _Nullable meters;
@property (nonatomic, strong) MapmyIndiaTripAdvicePoint * _Nullable point;
@property (nonatomic, strong) NSNumber * _Nullable seconds;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripAdvicePoint")
@interface MapmyIndiaTripAdvicePoint : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripResult")
@interface MapmyIndiaTripResult : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable alternatives;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable trips;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaUtility")
@interface MapmyIndiaUtility : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)durationSecondsToFormattedString:(NSNumber * _Nonnull)seconds SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getUniqueDeviceIdentifierAsString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSVersion SWIFT_WARN_UNUSED_RESULT;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.1 effective-4.2 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <MapmyIndiaAPIKit/MapmyIndiaAPIKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MapmyIndiaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasOAuth")
@interface AtlasOAuth : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, readonly, copy) NSString * _Nonnull authorizationFormattedValue;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable scope;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable tokenType;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable accessToken;
/// The house/building name name of the placemark.
@property (nonatomic, strong) NSNumber * _Nullable expiresIn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasVectorKey")
@interface MBAtlasVectorKey : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The vector key to fetch map tiles.
@property (nonatomic, copy) NSString * _Nullable publicKey;
/// The expiry time of vector map key.
@property (nonatomic, strong) NSNumber * _Nullable expiresOn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@class NSError;

/// A MMIAtlasManager object that allows you to query MapmyIndia OAuth and Vector Map Public Key.
SWIFT_CLASS_NAMED("MMIAtlasManager")
@interface MMIAtlasManager : NSObject
/// The shared MMIAtlasManager object.
/// To use this object, a <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKkey</a> should be specified in the <code>MapmyIndiaSDKKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MMIAtlasManager * _Nonnull sharedManager;)
+ (MMIAtlasManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MMIAtlasManager object with SDKKey.
/// \param SDKKey A <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKKey</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MMIAtlasManager object with an optional SDKKey.
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey;
/// Submits a atlas request for vector puplic key to get result in bool value.
/// \param completionHandler The closure (block) to call with the result. This closure is executed on the application’s main thread.
///
- (void)getResultForVectoKey:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
- (void)saveVectorMapPublicKey:(MBAtlasVectorKey * _Nullable)vectorKeys;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaAddressTokens")
@interface MapmyIndiaAddressTokens : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodePlacemark;

/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeAPIResponse")
@interface MapmyIndiaAtlasGeocodeAPIResponse : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The array of atlas geocode objects.
@property (nonatomic, copy) NSArray<MapmyIndiaAtlasGeocodePlacemark *> * _Nullable placemarks;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodeOptions;
@class NSURLSessionDataTask;

/// A MapmyIndiaAtlasGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Atlas Geocode API</a>. The query takes take address and returns a geographic location i.e coordinate of a location and other details.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeManager")
@interface MapmyIndiaAtlasGeocodeManager : NSObject
/// The shared MapmyIndiaAtlasGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAtlasGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaAtlasGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAtlasGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param clientId A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientId</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientId</code> key in the main application bundle’s Info.plist.
///
/// \param clientSecret A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientSecret</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientSecret</code> key in the main application bundle’s Info.plist.
///
/// \param grantType Set its value to ‘client_credentials’.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAtlasGeocodeManager object with an optional access token.
/// The MapmyIndiaAtlasGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getGeocodeResultsWithOptions:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaAtlasGeocodeAPIResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Atlas APIs.
/// You do not create instances of <code>AtlasOptions</code> directly. Instead, you create instances of <code>AtlasAutoSuggestOptions</code> and <code>AtlasNearbyOptions</code>, depending on the kind of operation you want to perform:
SWIFT_CLASS_NAMED("MapmyIndiaAtlasOptions")
@interface MapmyIndiaAtlasOptions : NSObject
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for atlas geocoding results. Geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeOptions")
@interface MapmyIndiaAtlasGeocodeOptions : MapmyIndiaAtlasOptions
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodePlacemark")
@interface MapmyIndiaAtlasGeocodePlacemark : MapmyIndiaAddressTokens
@property (nonatomic, readonly) NSUInteger hash;
/// The address of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The unique code of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The latitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The level of search of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable geocodeLevel;
@end



/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaSuggestion")
@interface MapmyIndiaSuggestion : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable type;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable typeX;
/// The address of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeAddress;
/// The latitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The unique code of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The name of place according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeName;
/// The index according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable orderIndex;
@property (nonatomic, strong) NSNumber * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable landlineNo;
@property (nonatomic, copy) NSString * _Nullable mobileNo;
/// This will contains all details of place if requested using API.
@property (nonatomic, strong) MapmyIndiaAddressTokens * _Nullable addressTokens;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasSuggestion")
@interface MapmyIndiaAtlasSuggestion : MapmyIndiaSuggestion
@end

@class MapmyIndiaSearchFilter;

/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSearchAtlasOptions")
@interface MapmyIndiaAutoSearchAtlasOptions : MapmyIndiaAtlasOptions
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) NSNumber * _Nullable zoom;
/// It allows to get tokenize address in response.
@property (nonatomic) BOOL includeTokenizeAddress;
/// On basis of this only specific type of response returned.
@property (nonatomic) MMIPodTypeIdentifier _Nonnull pod;
/// On basis of this only specific type of response returned.
@property (nonatomic, strong) MapmyIndiaSearchFilter * _Nullable filter;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaAutoSuggestManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaAutoSuggestManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaAutoSuggestManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSuggestManager")
@interface MapmyIndiaAutoSuggestManager : NSObject
/// The shared MapmyIndiaAutoSuggestManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAutoSuggestManager * _Nonnull sharedManager;)
+ (MapmyIndiaAutoSuggestManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAutoSuggestManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAutoSuggestManager object with an optional access token.
/// The MapmyIndiaAutoSuggestManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>.
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getAutoSuggestionsWithOptions:(MapmyIndiaAutoSearchAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaSearchFilter")
@interface MapmyIndiaSearchFilter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRectangularRegion;

SWIFT_CLASS_NAMED("MapmyIndiaBoundsFilter")
@interface MapmyIndiaBoundsFilter : MapmyIndiaSearchFilter
/// Initializes bounds filter object with the given bounds.
- (nonnull instancetype)initWithBounds:(MapmyIndiaRectangularRegion * _Nonnull)bounds;
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistance")
@interface MapmyIndiaDrivingDistance : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceOptions;
@class MapmyIndiaDrivingDistancePlacemark;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceManager")
@interface MapmyIndiaDrivingDistanceManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaDrivingDistancePlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrix")
@interface MapmyIndiaDrivingDistanceMatrix : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durationsAPI;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distancesAPI;
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durations;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distances;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceMatrixOptions;
@class MapmyIndiaDrivingDistanceMatrixResponse;

/// A MapmyIndiaDrivingDistanceMatrixManager object that allows you to query the [MapmyIndia distance matrix and distance matric eta API]
/// The MapmyIndiaDrivingDistanceMatrixManager object allows you to perform get distance of different locations from a location.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixManager")
@interface MapmyIndiaDrivingDistanceMatrixManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceMatrixManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceMatrixManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceMatrixManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaDrivingDistanceMatrixResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForDistanceMatrix:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Geocoding API.
/// You do not create instances of <code>GeocodeOptions</code> directly. Instead, you create instances of <code>ForwardGeocodeOptions</code> and <code>ReverseGeocodeOptions</code>, depending on the kind of geocoding you want to perform:
/// <ul>
///   <li>
///     <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. To perform forward geocoding, use a <code>ForwardGeocodeOptions</code> object.
///   </li>
///   <li>
///     <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location. To perform reverse geocoding, use a <code>ReverseGeocodeOptions</code> object.
///   </li>
/// </ul>
/// Pass an instance of either class into the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeOptions")
@interface MapmyIndiaGeocodeOptions : NSObject
/// By default, no country codes are specified.
/// To find out what kinds of results are available for a particular country, consult [the Geocoding API’s coverage map].
@property (nonatomic, copy) NSArray<NSString *> * _Nullable allowedISOCountryCodes;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable focalLocation;
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for distance matrix results. It takes a human-readable query, such as source location and secondary locations, and produces any number of results that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixOptions")
@interface MapmyIndiaDrivingDistanceMatrixOptions : MapmyIndiaGeocodeOptions
/// A location from which the distance will be calculated. It is taken as the source from which distance and ETA is to be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// Points provides the locations to which distance will be calculated from center.
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
/// Type of route Quickest/Optimal or Shortest.
@property (nonatomic) MMIDistanceRouteType routeType;
/// This will be used to get the duration considering live traffic; applicable for “India” region only and routeType shortest is not supported.
@property (nonatomic) BOOL withTraffic;
/// Initializes a distance matrix options object with the given query string.
/// \param center A location from which the distance will be calculated.
///
/// \param points Points to which distance will be calculated from center.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaDrivingDistanceMatrixResults;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResponse")
@interface MapmyIndiaDrivingDistanceMatrixResponse : NSObject
@property (nonatomic, strong) NSNumber * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, strong) MapmyIndiaDrivingDistanceMatrixResults * _Nullable results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>MapmyIndiaDrivingDistanceMatrix</code> to represent results of distance matrix requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResults")
@interface MapmyIndiaDrivingDistanceMatrixResults : MapmyIndiaDrivingDistanceMatrix
@end


SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceOptions")
@interface MapmyIndiaDrivingDistanceOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the distance will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// points provides the locations to which distance will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withTraffic;
/// Initializes a driving distance options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points;
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistancePlacemark")
@interface MapmyIndiaDrivingDistancePlacemark : MapmyIndiaDrivingDistance
@end


SWIFT_CLASS_NAMED("MapmyIndiaElocFilter")
@interface MapmyIndiaElocFilter : MapmyIndiaSearchFilter
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaForwardGeocodeOptions")
@interface MapmyIndiaForwardGeocodeOptions : MapmyIndiaGeocodeOptions
/// This parameter “pincode” will be used to filter out results on basis of pincode
@property (nonatomic, copy) NSString * _Nullable pincode;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaGeocodedPlacemark;

/// A MapmyIndiaGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeManager")
@interface MapmyIndiaGeocodeManager : NSObject
/// The shared MapmyIndiaGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token.
/// The MapmyIndiaGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)geocodeWithOptions:(MapmyIndiaForwardGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaPlacemark")
@interface MapmyIndiaPlacemark : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poiDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable streetDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
@property (nonatomic, readonly, copy) NSString * _Nullable latitude;
@property (nonatomic, readonly, copy) NSString * _Nullable longitude;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable area;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable placeId;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodedPlacemark")
@interface MapmyIndiaGeocodedPlacemark : MapmyIndiaPlacemark
@end

@class MapmyIndiaNearbyAtlasOptions;

/// A MapmyIndiaNearByManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaNearByManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaNearByManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaNearByManager")
@interface MapmyIndiaNearByManager : NSObject
/// The shared MapmyIndiaNearByManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaNearByManager * _Nonnull sharedManager;)
+ (MapmyIndiaNearByManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaNearByManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaNearByManager object with an optional access token.
/// The MapmyIndiaNearByManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getNearBySuggestionsWithOptions:(MapmyIndiaNearbyAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaNearbyAtlasOptions")
@interface MapmyIndiaNearbyAtlasOptions : MapmyIndiaAtlasOptions
/// A location provides the location around which the search will be performed.
@property (nonatomic, strong) CLLocation * _Nullable refLocation;
/// A page provides number of the page to provide results from.
@property (nonatomic, strong) NSNumber * _Nullable page;
/// radius provides the range of distance to search
@property (nonatomic, strong) NSNumber * _Nullable radius;
/// sort provides the range of distance to search
@property (nonatomic, copy) NSString * _Nullable sort;
/// bounds provides the range of distance to search
@property (nonatomic, strong) MapmyIndiaRectangularRegion * _Nullable bounds;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query location:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A structure that specifies the criteria for oAuth results.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthAtlasOptions")
@interface MapmyIndiaOAuthAtlasOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable grantType;
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSString * _Nullable clientSecret;
/// Initializes a OAuth options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithGrantType:(NSString * _Nonnull)grantType clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A MapmyIndiaOAuthManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaOAuthManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaOAuthManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthManager")
@interface MapmyIndiaOAuthManager : NSObject
/// The shared MapmyIndiaOAuthManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaOAuthManager * _Nonnull sharedOAuthManager;)
+ (MapmyIndiaOAuthManager * _Nonnull)sharedOAuthManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithClientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token.
/// The MapmyIndiaOAuthManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)init;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getOAuthTokenWithOptions:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(AtlasOAuth * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailGeocodeOptions")
@interface MapmyIndiaPlaceDetailGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaPlaceDetailManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaPlaceDetailManager object allows you to perform place detail geocoding. It takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
/// Each result produced by the MapmyIndiaPlaceDetailManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailManager")
@interface MapmyIndiaPlaceDetailManager : NSObject
/// The shared MapmyIndiaPlaceDetailManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaPlaceDetailManager * _Nonnull sharedManager;)
+ (MapmyIndiaPlaceDetailManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token.
/// The MapmyIndiaPlaceDetailManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getPlaceDetailWithOptions:(MapmyIndiaPlaceDetailGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class NSCoder;

/// The <code>RectangularRegion</code> class defines a rectangular bounding box for a geographic region.
SWIFT_CLASS_NAMED("MapmyIndiaRectangularRegion")
@interface MapmyIndiaRectangularRegion : CLRegion
/// Coordinate at the bottomRight corner.
@property (nonatomic) CLLocationCoordinate2D bottomRight;
/// Coordinate at the northeast corner.
@property (nonatomic) CLLocationCoordinate2D topLeft;
/// Creates a rectangular region with the given southwest and northeast corners.
/// <code>southWest</code> must be to the southwest of <code>northEast</code>. The region may not span the antimeridian. If you need to restrict a query to a region that spans the antimeridian, such as the region that encompasses Fiji, perform two queries each limited to the region on either side of the antimeridian, then combine the results.
/// \param southWest The southwesternmost geographic coordinate that lies within the region.
///
/// \param northEast The northeasternmost geographic coordinate that lies within the region.
///
- (nonnull instancetype)initWithTopLeft:(CLLocationCoordinate2D)topLeft bottomRight:(CLLocationCoordinate2D)bottomRight OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns a Boolean value indicating whether the bounding box contains the specified coordinate.
- (BOOL)containsLocationCoordinate2D:(CLLocationCoordinate2D)coordinate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaReverseGeocodeOptions;

/// A MapmyIndiaReverseGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaReverseGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaReverseGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeManager")
@interface MapmyIndiaReverseGeocodeManager : NSObject
/// The shared MapmyIndiaReverseGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaReverseGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaReverseGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token.
/// The MapmyIndiaReverseGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)reverseGeocodeWithOptions:(MapmyIndiaReverseGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for reverse geocoding results. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeOptions")
@interface MapmyIndiaReverseGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a reverse geocode options object with the given coordinate pair.
/// \param coordinate A coordinate pair to search for.
///
- (nonnull instancetype)initWithCoordinate:(CLLocationCoordinate2D)coordinate withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
/// Initializes a reverse geocode options object with the given <code>CLLocation</code> object.
/// \param location A <code>CLLocation</code> object to search for.
///
- (nonnull instancetype)initWithLocation:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaTripAdvice;

SWIFT_CLASS_NAMED("MapmyIndiaRouteTrip")
@interface MapmyIndiaRouteTrip : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<MapmyIndiaTripAdvice *> * _Nullable advices;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable pts;
@property (nonatomic, readonly, copy) NSString * _Nullable durationFormatted;
@property (nonatomic, readonly, copy) NSArray<NSValue *> * _Nullable coordinates;
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nullable locations;
/// The number of coordinates.
/// The value of this property may be zero or reduced depending on the object.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates.count</code> property.
@property (nonatomic, readonly) NSUInteger coordinateCount;
/// Retrieves the coordinates.
/// The array may be empty or simplified.
/// precondition:
/// <code>coordinates</code> must be large enough to hold <code>coordinateCount</code> instances of <code>CLLocationCoordinate2D</code>.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates</code> property.
/// \param coordinates A pointer to a C array of <code>CLLocationCoordinate2D</code> instances. On output, this array contains all the vertices of the overlay.
///
- (void)getCoordinates:(CLLocationCoordinate2D * _Nonnull)coordinates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRouteTripOptions;
@class MapmyIndiaTripResult;

/// A MapmyIndiaRouteTripManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/route-api">MapmyIndia route API</a>
/// The MapmyIndiaRouteTripManager object allows you to perform get route betwweeb locations.
SWIFT_CLASS_NAMED("MapmyIndiaRouteTripManager")
@interface MapmyIndiaRouteTripManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaRouteTripManager * _Nonnull sharedManager;)
+ (MapmyIndiaRouteTripManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token.
/// The MapmyIndiaRouteTripManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaRouteTripOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaTripResult * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaRouteTripOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaRouteTripOptions")
@interface MapmyIndiaRouteTripOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable startLocation;
/// A location provides the location to which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable destinationLocation;
/// locations via which route will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable viaPoints;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withAlternatives;
@property (nonatomic) BOOL withAdvices;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithStartLocation:(CLLocation * _Nonnull)startLocation destinationLocation:(CLLocation * _Nonnull)destinationLocation;
@end




SWIFT_CLASS_NAMED("MapmyIndiaTrip")
@interface MapmyIndiaTrip : MapmyIndiaRouteTrip
@end

@class MapmyIndiaTripAdvicePoint;

SWIFT_CLASS_NAMED("MapmyIndiaTripAdvice")
@interface MapmyIndiaTripAdvice : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable exitNR;
@property (nonatomic, strong) NSNumber * _Nullable iconId;
@property (nonatomic, strong) NSNumber * _Nullable meters;
@property (nonatomic, strong) MapmyIndiaTripAdvicePoint * _Nullable point;
@property (nonatomic, strong) NSNumber * _Nullable seconds;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripAdvicePoint")
@interface MapmyIndiaTripAdvicePoint : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripResult")
@interface MapmyIndiaTripResult : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable alternatives;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable trips;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaUtility")
@interface MapmyIndiaUtility : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)durationSecondsToFormattedString:(NSNumber * _Nonnull)seconds SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getUniqueDeviceIdentifierAsString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSVersion SWIFT_WARN_UNUSED_RESULT;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif

#else
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1 effective-4.2 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <MapmyIndiaAPIKit/MapmyIndiaAPIKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MapmyIndiaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasOAuth")
@interface AtlasOAuth : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, readonly, copy) NSString * _Nonnull authorizationFormattedValue;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable scope;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable tokenType;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable accessToken;
/// The house/building name name of the placemark.
@property (nonatomic, strong) NSNumber * _Nullable expiresIn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasVectorKey")
@interface MBAtlasVectorKey : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The vector key to fetch map tiles.
@property (nonatomic, copy) NSString * _Nullable publicKey;
/// The expiry time of vector map key.
@property (nonatomic, strong) NSNumber * _Nullable expiresOn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@class NSError;

/// A MMIAtlasManager object that allows you to query MapmyIndia OAuth and Vector Map Public Key.
SWIFT_CLASS_NAMED("MMIAtlasManager")
@interface MMIAtlasManager : NSObject
/// The shared MMIAtlasManager object.
/// To use this object, a <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKkey</a> should be specified in the <code>MapmyIndiaSDKKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MMIAtlasManager * _Nonnull sharedManager;)
+ (MMIAtlasManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MMIAtlasManager object with SDKKey.
/// \param SDKKey A <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKKey</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MMIAtlasManager object with an optional SDKKey.
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey;
/// Submits a atlas request for vector puplic key to get result in bool value.
/// \param completionHandler The closure (block) to call with the result. This closure is executed on the application’s main thread.
///
- (void)getResultForVectoKey:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
- (void)saveVectorMapPublicKey:(MBAtlasVectorKey * _Nullable)vectorKeys;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaAddressTokens")
@interface MapmyIndiaAddressTokens : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodePlacemark;

/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeAPIResponse")
@interface MapmyIndiaAtlasGeocodeAPIResponse : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The array of atlas geocode objects.
@property (nonatomic, copy) NSArray<MapmyIndiaAtlasGeocodePlacemark *> * _Nullable placemarks;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodeOptions;
@class NSURLSessionDataTask;

/// A MapmyIndiaAtlasGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Atlas Geocode API</a>. The query takes take address and returns a geographic location i.e coordinate of a location and other details.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeManager")
@interface MapmyIndiaAtlasGeocodeManager : NSObject
/// The shared MapmyIndiaAtlasGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAtlasGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaAtlasGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAtlasGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param clientId A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientId</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientId</code> key in the main application bundle’s Info.plist.
///
/// \param clientSecret A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientSecret</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientSecret</code> key in the main application bundle’s Info.plist.
///
/// \param grantType Set its value to ‘client_credentials’.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAtlasGeocodeManager object with an optional access token.
/// The MapmyIndiaAtlasGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getGeocodeResultsWithOptions:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaAtlasGeocodeAPIResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Atlas APIs.
/// You do not create instances of <code>AtlasOptions</code> directly. Instead, you create instances of <code>AtlasAutoSuggestOptions</code> and <code>AtlasNearbyOptions</code>, depending on the kind of operation you want to perform:
SWIFT_CLASS_NAMED("MapmyIndiaAtlasOptions")
@interface MapmyIndiaAtlasOptions : NSObject
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for atlas geocoding results. Geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeOptions")
@interface MapmyIndiaAtlasGeocodeOptions : MapmyIndiaAtlasOptions
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodePlacemark")
@interface MapmyIndiaAtlasGeocodePlacemark : MapmyIndiaAddressTokens
@property (nonatomic, readonly) NSUInteger hash;
/// The address of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The unique code of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The latitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The level of search of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable geocodeLevel;
@end



/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaSuggestion")
@interface MapmyIndiaSuggestion : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable type;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable typeX;
/// The address of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeAddress;
/// The latitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The unique code of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The name of place according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeName;
/// The index according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable orderIndex;
@property (nonatomic, strong) NSNumber * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable landlineNo;
@property (nonatomic, copy) NSString * _Nullable mobileNo;
/// This will contains all details of place if requested using API.
@property (nonatomic, strong) MapmyIndiaAddressTokens * _Nullable addressTokens;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasSuggestion")
@interface MapmyIndiaAtlasSuggestion : MapmyIndiaSuggestion
@end

@class MapmyIndiaSearchFilter;

/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSearchAtlasOptions")
@interface MapmyIndiaAutoSearchAtlasOptions : MapmyIndiaAtlasOptions
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) NSNumber * _Nullable zoom;
/// It allows to get tokenize address in response.
@property (nonatomic) BOOL includeTokenizeAddress;
/// On basis of this only specific type of response returned.
@property (nonatomic) MMIPodTypeIdentifier _Nonnull pod;
/// On basis of this only specific type of response returned.
@property (nonatomic, strong) MapmyIndiaSearchFilter * _Nullable filter;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaAutoSuggestManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaAutoSuggestManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaAutoSuggestManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSuggestManager")
@interface MapmyIndiaAutoSuggestManager : NSObject
/// The shared MapmyIndiaAutoSuggestManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAutoSuggestManager * _Nonnull sharedManager;)
+ (MapmyIndiaAutoSuggestManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAutoSuggestManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAutoSuggestManager object with an optional access token.
/// The MapmyIndiaAutoSuggestManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>.
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getAutoSuggestionsWithOptions:(MapmyIndiaAutoSearchAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaSearchFilter")
@interface MapmyIndiaSearchFilter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRectangularRegion;

SWIFT_CLASS_NAMED("MapmyIndiaBoundsFilter")
@interface MapmyIndiaBoundsFilter : MapmyIndiaSearchFilter
/// Initializes bounds filter object with the given bounds.
- (nonnull instancetype)initWithBounds:(MapmyIndiaRectangularRegion * _Nonnull)bounds;
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistance")
@interface MapmyIndiaDrivingDistance : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceOptions;
@class MapmyIndiaDrivingDistancePlacemark;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceManager")
@interface MapmyIndiaDrivingDistanceManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaDrivingDistancePlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrix")
@interface MapmyIndiaDrivingDistanceMatrix : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durationsAPI;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distancesAPI;
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durations;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distances;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceMatrixOptions;
@class MapmyIndiaDrivingDistanceMatrixResponse;

/// A MapmyIndiaDrivingDistanceMatrixManager object that allows you to query the [MapmyIndia distance matrix and distance matric eta API]
/// The MapmyIndiaDrivingDistanceMatrixManager object allows you to perform get distance of different locations from a location.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixManager")
@interface MapmyIndiaDrivingDistanceMatrixManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceMatrixManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceMatrixManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceMatrixManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaDrivingDistanceMatrixResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForDistanceMatrix:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Geocoding API.
/// You do not create instances of <code>GeocodeOptions</code> directly. Instead, you create instances of <code>ForwardGeocodeOptions</code> and <code>ReverseGeocodeOptions</code>, depending on the kind of geocoding you want to perform:
/// <ul>
///   <li>
///     <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. To perform forward geocoding, use a <code>ForwardGeocodeOptions</code> object.
///   </li>
///   <li>
///     <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location. To perform reverse geocoding, use a <code>ReverseGeocodeOptions</code> object.
///   </li>
/// </ul>
/// Pass an instance of either class into the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeOptions")
@interface MapmyIndiaGeocodeOptions : NSObject
/// By default, no country codes are specified.
/// To find out what kinds of results are available for a particular country, consult [the Geocoding API’s coverage map].
@property (nonatomic, copy) NSArray<NSString *> * _Nullable allowedISOCountryCodes;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable focalLocation;
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for distance matrix results. It takes a human-readable query, such as source location and secondary locations, and produces any number of results that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixOptions")
@interface MapmyIndiaDrivingDistanceMatrixOptions : MapmyIndiaGeocodeOptions
/// A location from which the distance will be calculated. It is taken as the source from which distance and ETA is to be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// Points provides the locations to which distance will be calculated from center.
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
/// Type of route Quickest/Optimal or Shortest.
@property (nonatomic) MMIDistanceRouteType routeType;
/// This will be used to get the duration considering live traffic; applicable for “India” region only and routeType shortest is not supported.
@property (nonatomic) BOOL withTraffic;
/// Initializes a distance matrix options object with the given query string.
/// \param center A location from which the distance will be calculated.
///
/// \param points Points to which distance will be calculated from center.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaDrivingDistanceMatrixResults;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResponse")
@interface MapmyIndiaDrivingDistanceMatrixResponse : NSObject
@property (nonatomic, strong) NSNumber * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, strong) MapmyIndiaDrivingDistanceMatrixResults * _Nullable results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>MapmyIndiaDrivingDistanceMatrix</code> to represent results of distance matrix requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResults")
@interface MapmyIndiaDrivingDistanceMatrixResults : MapmyIndiaDrivingDistanceMatrix
@end


SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceOptions")
@interface MapmyIndiaDrivingDistanceOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the distance will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// points provides the locations to which distance will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withTraffic;
/// Initializes a driving distance options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points;
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistancePlacemark")
@interface MapmyIndiaDrivingDistancePlacemark : MapmyIndiaDrivingDistance
@end


SWIFT_CLASS_NAMED("MapmyIndiaElocFilter")
@interface MapmyIndiaElocFilter : MapmyIndiaSearchFilter
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaForwardGeocodeOptions")
@interface MapmyIndiaForwardGeocodeOptions : MapmyIndiaGeocodeOptions
/// This parameter “pincode” will be used to filter out results on basis of pincode
@property (nonatomic, copy) NSString * _Nullable pincode;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaGeocodedPlacemark;

/// A MapmyIndiaGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeManager")
@interface MapmyIndiaGeocodeManager : NSObject
/// The shared MapmyIndiaGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token.
/// The MapmyIndiaGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)geocodeWithOptions:(MapmyIndiaForwardGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaPlacemark")
@interface MapmyIndiaPlacemark : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poiDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable streetDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
@property (nonatomic, readonly, copy) NSString * _Nullable latitude;
@property (nonatomic, readonly, copy) NSString * _Nullable longitude;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable area;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable placeId;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodedPlacemark")
@interface MapmyIndiaGeocodedPlacemark : MapmyIndiaPlacemark
@end

@class MapmyIndiaNearbyAtlasOptions;

/// A MapmyIndiaNearByManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaNearByManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaNearByManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaNearByManager")
@interface MapmyIndiaNearByManager : NSObject
/// The shared MapmyIndiaNearByManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaNearByManager * _Nonnull sharedManager;)
+ (MapmyIndiaNearByManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaNearByManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaNearByManager object with an optional access token.
/// The MapmyIndiaNearByManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getNearBySuggestionsWithOptions:(MapmyIndiaNearbyAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaNearbyAtlasOptions")
@interface MapmyIndiaNearbyAtlasOptions : MapmyIndiaAtlasOptions
/// A location provides the location around which the search will be performed.
@property (nonatomic, strong) CLLocation * _Nullable refLocation;
/// A page provides number of the page to provide results from.
@property (nonatomic, strong) NSNumber * _Nullable page;
/// radius provides the range of distance to search
@property (nonatomic, strong) NSNumber * _Nullable radius;
/// sort provides the range of distance to search
@property (nonatomic, copy) NSString * _Nullable sort;
/// bounds provides the range of distance to search
@property (nonatomic, strong) MapmyIndiaRectangularRegion * _Nullable bounds;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query location:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A structure that specifies the criteria for oAuth results.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthAtlasOptions")
@interface MapmyIndiaOAuthAtlasOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable grantType;
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSString * _Nullable clientSecret;
/// Initializes a OAuth options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithGrantType:(NSString * _Nonnull)grantType clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A MapmyIndiaOAuthManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaOAuthManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaOAuthManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthManager")
@interface MapmyIndiaOAuthManager : NSObject
/// The shared MapmyIndiaOAuthManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaOAuthManager * _Nonnull sharedOAuthManager;)
+ (MapmyIndiaOAuthManager * _Nonnull)sharedOAuthManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithClientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token.
/// The MapmyIndiaOAuthManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)init;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getOAuthTokenWithOptions:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(AtlasOAuth * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailGeocodeOptions")
@interface MapmyIndiaPlaceDetailGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaPlaceDetailManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaPlaceDetailManager object allows you to perform place detail geocoding. It takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
/// Each result produced by the MapmyIndiaPlaceDetailManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailManager")
@interface MapmyIndiaPlaceDetailManager : NSObject
/// The shared MapmyIndiaPlaceDetailManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaPlaceDetailManager * _Nonnull sharedManager;)
+ (MapmyIndiaPlaceDetailManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token.
/// The MapmyIndiaPlaceDetailManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getPlaceDetailWithOptions:(MapmyIndiaPlaceDetailGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class NSCoder;

/// The <code>RectangularRegion</code> class defines a rectangular bounding box for a geographic region.
SWIFT_CLASS_NAMED("MapmyIndiaRectangularRegion")
@interface MapmyIndiaRectangularRegion : CLRegion
/// Coordinate at the bottomRight corner.
@property (nonatomic) CLLocationCoordinate2D bottomRight;
/// Coordinate at the northeast corner.
@property (nonatomic) CLLocationCoordinate2D topLeft;
/// Creates a rectangular region with the given southwest and northeast corners.
/// <code>southWest</code> must be to the southwest of <code>northEast</code>. The region may not span the antimeridian. If you need to restrict a query to a region that spans the antimeridian, such as the region that encompasses Fiji, perform two queries each limited to the region on either side of the antimeridian, then combine the results.
/// \param southWest The southwesternmost geographic coordinate that lies within the region.
///
/// \param northEast The northeasternmost geographic coordinate that lies within the region.
///
- (nonnull instancetype)initWithTopLeft:(CLLocationCoordinate2D)topLeft bottomRight:(CLLocationCoordinate2D)bottomRight OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns a Boolean value indicating whether the bounding box contains the specified coordinate.
- (BOOL)containsLocationCoordinate2D:(CLLocationCoordinate2D)coordinate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaReverseGeocodeOptions;

/// A MapmyIndiaReverseGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaReverseGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaReverseGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeManager")
@interface MapmyIndiaReverseGeocodeManager : NSObject
/// The shared MapmyIndiaReverseGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaReverseGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaReverseGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token.
/// The MapmyIndiaReverseGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)reverseGeocodeWithOptions:(MapmyIndiaReverseGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for reverse geocoding results. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeOptions")
@interface MapmyIndiaReverseGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a reverse geocode options object with the given coordinate pair.
/// \param coordinate A coordinate pair to search for.
///
- (nonnull instancetype)initWithCoordinate:(CLLocationCoordinate2D)coordinate withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
/// Initializes a reverse geocode options object with the given <code>CLLocation</code> object.
/// \param location A <code>CLLocation</code> object to search for.
///
- (nonnull instancetype)initWithLocation:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaTripAdvice;

SWIFT_CLASS_NAMED("MapmyIndiaRouteTrip")
@interface MapmyIndiaRouteTrip : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<MapmyIndiaTripAdvice *> * _Nullable advices;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable pts;
@property (nonatomic, readonly, copy) NSString * _Nullable durationFormatted;
@property (nonatomic, readonly, copy) NSArray<NSValue *> * _Nullable coordinates;
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nullable locations;
/// The number of coordinates.
/// The value of this property may be zero or reduced depending on the object.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates.count</code> property.
@property (nonatomic, readonly) NSUInteger coordinateCount;
/// Retrieves the coordinates.
/// The array may be empty or simplified.
/// precondition:
/// <code>coordinates</code> must be large enough to hold <code>coordinateCount</code> instances of <code>CLLocationCoordinate2D</code>.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates</code> property.
/// \param coordinates A pointer to a C array of <code>CLLocationCoordinate2D</code> instances. On output, this array contains all the vertices of the overlay.
///
- (void)getCoordinates:(CLLocationCoordinate2D * _Nonnull)coordinates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRouteTripOptions;
@class MapmyIndiaTripResult;

/// A MapmyIndiaRouteTripManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/route-api">MapmyIndia route API</a>
/// The MapmyIndiaRouteTripManager object allows you to perform get route betwweeb locations.
SWIFT_CLASS_NAMED("MapmyIndiaRouteTripManager")
@interface MapmyIndiaRouteTripManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaRouteTripManager * _Nonnull sharedManager;)
+ (MapmyIndiaRouteTripManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token.
/// The MapmyIndiaRouteTripManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaRouteTripOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaTripResult * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaRouteTripOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaRouteTripOptions")
@interface MapmyIndiaRouteTripOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable startLocation;
/// A location provides the location to which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable destinationLocation;
/// locations via which route will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable viaPoints;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withAlternatives;
@property (nonatomic) BOOL withAdvices;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithStartLocation:(CLLocation * _Nonnull)startLocation destinationLocation:(CLLocation * _Nonnull)destinationLocation;
@end




SWIFT_CLASS_NAMED("MapmyIndiaTrip")
@interface MapmyIndiaTrip : MapmyIndiaRouteTrip
@end

@class MapmyIndiaTripAdvicePoint;

SWIFT_CLASS_NAMED("MapmyIndiaTripAdvice")
@interface MapmyIndiaTripAdvice : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable exitNR;
@property (nonatomic, strong) NSNumber * _Nullable iconId;
@property (nonatomic, strong) NSNumber * _Nullable meters;
@property (nonatomic, strong) MapmyIndiaTripAdvicePoint * _Nullable point;
@property (nonatomic, strong) NSNumber * _Nullable seconds;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripAdvicePoint")
@interface MapmyIndiaTripAdvicePoint : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripResult")
@interface MapmyIndiaTripResult : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable alternatives;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable trips;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaUtility")
@interface MapmyIndiaUtility : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)durationSecondsToFormattedString:(NSNumber * _Nonnull)seconds SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getUniqueDeviceIdentifierAsString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSVersion SWIFT_WARN_UNUSED_RESULT;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1 effective-4.2 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <MapmyIndiaAPIKit/MapmyIndiaAPIKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MapmyIndiaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasOAuth")
@interface AtlasOAuth : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, readonly, copy) NSString * _Nonnull authorizationFormattedValue;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable scope;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable tokenType;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable accessToken;
/// The house/building name name of the placemark.
@property (nonatomic, strong) NSNumber * _Nullable expiresIn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("AtlasVectorKey")
@interface MBAtlasVectorKey : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The vector key to fetch map tiles.
@property (nonatomic, copy) NSString * _Nullable publicKey;
/// The expiry time of vector map key.
@property (nonatomic, strong) NSNumber * _Nullable expiresOn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@class NSError;

/// A MMIAtlasManager object that allows you to query MapmyIndia OAuth and Vector Map Public Key.
SWIFT_CLASS_NAMED("MMIAtlasManager")
@interface MMIAtlasManager : NSObject
/// The shared MMIAtlasManager object.
/// To use this object, a <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKkey</a> should be specified in the <code>MapmyIndiaSDKKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MMIAtlasManager * _Nonnull sharedManager;)
+ (MMIAtlasManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MMIAtlasManager object with SDKKey.
/// \param SDKKey A <a href="http://www.mapmyindia.com/api/dashboard">MapmyIndiaSDKKey</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MMIAtlasManager object with an optional SDKKey.
- (nonnull instancetype)initWithSDKKey:(NSString * _Nullable)SDKKey;
/// Submits a atlas request for vector puplic key to get result in bool value.
/// \param completionHandler The closure (block) to call with the result. This closure is executed on the application’s main thread.
///
- (void)getResultForVectoKey:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
- (void)saveVectorMapPublicKey:(MBAtlasVectorKey * _Nullable)vectorKeys;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaAddressTokens")
@interface MapmyIndiaAddressTokens : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodePlacemark;

/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeAPIResponse")
@interface MapmyIndiaAtlasGeocodeAPIResponse : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The array of atlas geocode objects.
@property (nonatomic, copy) NSArray<MapmyIndiaAtlasGeocodePlacemark *> * _Nullable placemarks;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaAtlasGeocodeOptions;
@class NSURLSessionDataTask;

/// A MapmyIndiaAtlasGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Atlas Geocode API</a>. The query takes take address and returns a geographic location i.e coordinate of a location and other details.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeManager")
@interface MapmyIndiaAtlasGeocodeManager : NSObject
/// The shared MapmyIndiaAtlasGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAtlasGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaAtlasGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAtlasGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param clientId A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientId</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientId</code> key in the main application bundle’s Info.plist.
///
/// \param clientSecret A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">clientSecret</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaAtlasClientSecret</code> key in the main application bundle’s Info.plist.
///
/// \param grantType Set its value to ‘client_credentials’.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAtlasGeocodeManager object with an optional access token.
/// The MapmyIndiaAtlasGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAtlasGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getGeocodeResultsWithOptions:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaAtlasGeocodeAPIResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaAtlasGeocodeOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Atlas APIs.
/// You do not create instances of <code>AtlasOptions</code> directly. Instead, you create instances of <code>AtlasAutoSuggestOptions</code> and <code>AtlasNearbyOptions</code>, depending on the kind of operation you want to perform:
SWIFT_CLASS_NAMED("MapmyIndiaAtlasOptions")
@interface MapmyIndiaAtlasOptions : NSObject
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for atlas geocoding results. Geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodeOptions")
@interface MapmyIndiaAtlasGeocodeOptions : MapmyIndiaAtlasOptions
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


SWIFT_CLASS_NAMED("MapmyIndiaAtlasGeocodePlacemark")
@interface MapmyIndiaAtlasGeocodePlacemark : MapmyIndiaAddressTokens
@property (nonatomic, readonly) NSUInteger hash;
/// The address of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The unique code of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The latitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the Atlas Geocode.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The level of search of the Atlas Geocode.
@property (nonatomic, copy) NSString * _Nullable geocodeLevel;
@end



/// A <code>AtlasSuggestion</code> object represents a geocoder result. A atlasSuggestion associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a atlasSuggestion object from another atlasSuggestion object; however, atlasSuggestion objects are generally created for you via the <code>AtlasGeocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaSuggestion")
@interface MapmyIndiaSuggestion : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable type;
/// The type according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable typeX;
/// The address of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeAddress;
/// The latitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable latitude;
/// The longitude of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable longitude;
/// The unique code of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable eLoc;
/// The name of place according to interest of the atlasSuggestion.
@property (nonatomic, copy) NSString * _Nullable placeName;
/// The index according to interest of the atlasSuggestion.
@property (nonatomic, strong) NSNumber * _Nullable orderIndex;
@property (nonatomic, strong) NSNumber * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable landlineNo;
@property (nonatomic, copy) NSString * _Nullable mobileNo;
/// This will contains all details of place if requested using API.
@property (nonatomic, strong) MapmyIndiaAddressTokens * _Nullable addressTokens;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaAtlasSuggestion")
@interface MapmyIndiaAtlasSuggestion : MapmyIndiaSuggestion
@end

@class MapmyIndiaSearchFilter;

/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSearchAtlasOptions")
@interface MapmyIndiaAutoSearchAtlasOptions : MapmyIndiaAtlasOptions
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) NSNumber * _Nullable zoom;
/// It allows to get tokenize address in response.
@property (nonatomic) BOOL includeTokenizeAddress;
/// On basis of this only specific type of response returned.
@property (nonatomic) MMIPodTypeIdentifier _Nonnull pod;
/// On basis of this only specific type of response returned.
@property (nonatomic, strong) MapmyIndiaSearchFilter * _Nullable filter;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaAutoSuggestManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaAutoSuggestManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaAutoSuggestManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaAutoSuggestManager")
@interface MapmyIndiaAutoSuggestManager : NSObject
/// The shared MapmyIndiaAutoSuggestManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaAutoSuggestManager * _Nonnull sharedManager;)
+ (MapmyIndiaAutoSuggestManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaAutoSuggestManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaAutoSuggestManager object with an optional access token.
/// The MapmyIndiaAutoSuggestManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaAutoSuggestManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>.
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getAutoSuggestionsWithOptions:(MapmyIndiaAutoSearchAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaSearchFilter")
@interface MapmyIndiaSearchFilter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRectangularRegion;

SWIFT_CLASS_NAMED("MapmyIndiaBoundsFilter")
@interface MapmyIndiaBoundsFilter : MapmyIndiaSearchFilter
/// Initializes bounds filter object with the given bounds.
- (nonnull instancetype)initWithBounds:(MapmyIndiaRectangularRegion * _Nonnull)bounds;
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistance")
@interface MapmyIndiaDrivingDistance : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceOptions;
@class MapmyIndiaDrivingDistancePlacemark;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceManager")
@interface MapmyIndiaDrivingDistanceManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaDrivingDistancePlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaDrivingDistanceOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrix")
@interface MapmyIndiaDrivingDistanceMatrix : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durationsAPI;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distancesAPI;
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable durations;
@property (nonatomic, readonly, copy) NSArray<NSArray<NSNumber *> *> * _Nullable distances;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaDrivingDistanceMatrixOptions;
@class MapmyIndiaDrivingDistanceMatrixResponse;

/// A MapmyIndiaDrivingDistanceMatrixManager object that allows you to query the [MapmyIndia distance matrix and distance matric eta API]
/// The MapmyIndiaDrivingDistanceMatrixManager object allows you to perform get distance of different locations from a location.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixManager")
@interface MapmyIndiaDrivingDistanceMatrixManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaDrivingDistanceMatrixManager * _Nonnull sharedManager;)
+ (MapmyIndiaDrivingDistanceMatrixManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaDrivingDistanceMatrixManager object with an optional access token.
/// The MapmyIndiaDrivingDistanceMatrixManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaDrivingDistanceMatrixManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaDrivingDistanceMatrixResponse * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForDistanceMatrix:(MapmyIndiaDrivingDistanceMatrixOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for results returned by the MapmyIndia Geocoding API.
/// You do not create instances of <code>GeocodeOptions</code> directly. Instead, you create instances of <code>ForwardGeocodeOptions</code> and <code>ReverseGeocodeOptions</code>, depending on the kind of geocoding you want to perform:
/// <ul>
///   <li>
///     <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. To perform forward geocoding, use a <code>ForwardGeocodeOptions</code> object.
///   </li>
///   <li>
///     <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location. To perform reverse geocoding, use a <code>ReverseGeocodeOptions</code> object.
///   </li>
/// </ul>
/// Pass an instance of either class into the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeOptions")
@interface MapmyIndiaGeocodeOptions : NSObject
/// By default, no country codes are specified.
/// To find out what kinds of results are available for a particular country, consult [the Geocoding API’s coverage map].
@property (nonatomic, copy) NSArray<NSString *> * _Nullable allowedISOCountryCodes;
/// A location to use as a hint when looking up the specified address.
/// This property prioritizes results that are close to a specific location, which is typically the user’s current location. If the value of this property is <code>nil</code> – which it is by default – no specific location is prioritized.
@property (nonatomic, strong) CLLocation * _Nullable focalLocation;
/// Limit the number of results returned. For forward geocoding, the default is <code>5</code> and the maximum is <code>10</code>. For reverse geocoding, the default is <code>1</code> and the maximum is <code>5</code>.
@property (nonatomic) NSUInteger maximumResultCount;
/// The locale in which results should be returned.
/// This property affects the language of returned results; generally speaking, it does not determine which results are found. If the Geocoding API does not recognize the language code, it may fall back to another language or the default language. Components other than the language code, such as the country and script codes, are ignored.
/// By default, this property is set to <code>nil</code>, causing results to be in the default language.
/// experiment:
/// This option is experimental.
@property (nonatomic, copy) NSLocale * _Nullable locale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for distance matrix results. It takes a human-readable query, such as source location and secondary locations, and produces any number of results that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixOptions")
@interface MapmyIndiaDrivingDistanceMatrixOptions : MapmyIndiaGeocodeOptions
/// A location from which the distance will be calculated. It is taken as the source from which distance and ETA is to be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// Points provides the locations to which distance will be calculated from center.
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
/// Type of route Quickest/Optimal or Shortest.
@property (nonatomic) MMIDistanceRouteType routeType;
/// This will be used to get the duration considering live traffic; applicable for “India” region only and routeType shortest is not supported.
@property (nonatomic) BOOL withTraffic;
/// Initializes a distance matrix options object with the given query string.
/// \param center A location from which the distance will be calculated.
///
/// \param points Points to which distance will be calculated from center.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaDrivingDistanceMatrixResults;

SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResponse")
@interface MapmyIndiaDrivingDistanceMatrixResponse : NSObject
@property (nonatomic, strong) NSNumber * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, strong) MapmyIndiaDrivingDistanceMatrixResults * _Nullable results;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>MapmyIndiaDrivingDistanceMatrix</code> to represent results of distance matrix requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceMatrixResults")
@interface MapmyIndiaDrivingDistanceMatrixResults : MapmyIndiaDrivingDistanceMatrix
@end


SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistanceOptions")
@interface MapmyIndiaDrivingDistanceOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the distance will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable center;
/// points provides the locations to which distance will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable points;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withTraffic;
/// Initializes a driving distance options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithCenter:(CLLocation * _Nonnull)center points:(NSArray<CLLocation *> * _Nonnull)points;
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaDrivingDistancePlacemark")
@interface MapmyIndiaDrivingDistancePlacemark : MapmyIndiaDrivingDistance
@end


SWIFT_CLASS_NAMED("MapmyIndiaElocFilter")
@interface MapmyIndiaElocFilter : MapmyIndiaSearchFilter
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaForwardGeocodeOptions")
@interface MapmyIndiaForwardGeocodeOptions : MapmyIndiaGeocodeOptions
/// This parameter “pincode” will be used to filter out results on basis of pincode
@property (nonatomic, copy) NSString * _Nullable pincode;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaGeocodedPlacemark;

/// A MapmyIndiaGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodeManager")
@interface MapmyIndiaGeocodeManager : NSObject
/// The shared MapmyIndiaGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaGeocodeManager object with an optional access token.
/// The MapmyIndiaGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)geocodeWithOptions:(MapmyIndiaForwardGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// A <code>Placemark</code> object represents a geocoder result. A placemark associates identifiers, geographic data, and contact information with a particular latitude and longitude. It is possible to explicitly create a placemark object from another placemark object; however, placemark objects are generally created for you via the <code>Geocoder.geocode(_:completionHandler:)</code> method.
SWIFT_CLASS_NAMED("MapmyIndiaPlacemark")
@interface MapmyIndiaPlacemark : NSObject
@property (nonatomic, readonly) NSUInteger hash;
/// The house/building number name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseNumber;
/// The house/building name name of the placemark.
@property (nonatomic, copy) NSString * _Nullable houseName;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poi;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable poiDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable street;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable streetDist;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subSubLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subLocality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable locality;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable village;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable district;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable subDistrict;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable city;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable state;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable pincode;
@property (nonatomic, readonly, copy) NSString * _Nullable latitude;
@property (nonatomic, readonly, copy) NSString * _Nullable longitude;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable area;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable placeId;
/// The type according to interest of the placemark.
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A concrete subclass of <code>Placemark</code> to represent results of geocoding requests.
SWIFT_CLASS_NAMED("MapmyIndiaGeocodedPlacemark")
@interface MapmyIndiaGeocodedPlacemark : MapmyIndiaPlacemark
@end

@class MapmyIndiaNearbyAtlasOptions;

/// A MapmyIndiaNearByManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaNearByManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaNearByManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaNearByManager")
@interface MapmyIndiaNearByManager : NSObject
/// The shared MapmyIndiaNearByManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaNearByManager * _Nonnull sharedManager;)
+ (MapmyIndiaNearByManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaNearByManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey clientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created atlas MapmyIndiaNearByManager object with an optional access token.
/// The MapmyIndiaNearByManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaNearByManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getNearBySuggestionsWithOptions:(MapmyIndiaNearbyAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaAtlasSuggestion *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for auto search results. Auto search takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaNearbyAtlasOptions")
@interface MapmyIndiaNearbyAtlasOptions : MapmyIndiaAtlasOptions
/// A location provides the location around which the search will be performed.
@property (nonatomic, strong) CLLocation * _Nullable refLocation;
/// A page provides number of the page to provide results from.
@property (nonatomic, strong) NSNumber * _Nullable page;
/// radius provides the range of distance to search
@property (nonatomic, strong) NSNumber * _Nullable radius;
/// sort provides the range of distance to search
@property (nonatomic, copy) NSString * _Nullable sort;
/// bounds provides the range of distance to search
@property (nonatomic, strong) MapmyIndiaRectangularRegion * _Nullable bounds;
/// Initializes a auto search atlas options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query location:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A structure that specifies the criteria for oAuth results.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthAtlasOptions")
@interface MapmyIndiaOAuthAtlasOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable grantType;
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSString * _Nullable clientSecret;
/// Initializes a OAuth options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithGrantType:(NSString * _Nonnull)grantType clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A MapmyIndiaOAuthManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/autosuggest-api">MapmyIndia Text Search API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaOAuthManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaOAuthManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaOAuthManager")
@interface MapmyIndiaOAuthManager : NSObject
/// The shared MapmyIndiaOAuthManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaOAuthManager * _Nonnull sharedOAuthManager;)
+ (MapmyIndiaOAuthManager * _Nonnull)sharedOAuthManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithClientId:(NSString * _Nullable)clientId clientSecret:(NSString * _Nullable)clientSecret grantType:(NSString * _Nullable)grantType OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaOAuthManager object with an optional access token.
/// The MapmyIndiaOAuthManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaOAuthManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)init;
/// Submits a atlas request to search for suggestions and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>AutoSearchAtlasOptions</code>, <code>NearbyAtlasOptions</code> .
///
/// \param completionHandler The closure (block) to call with the resulting suggestions. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getOAuthTokenWithOptions:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(AtlasOAuth * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaOAuthAtlasOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end


/// A structure that specifies the criteria for forward geocoding results. Forward geocoding takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailGeocodeOptions")
@interface MapmyIndiaPlaceDetailGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithPlaceId:(NSString * _Nonnull)placeId withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end


/// A MapmyIndiaPlaceDetailManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaPlaceDetailManager object allows you to perform place detail geocoding. It takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query.
/// Each result produced by the MapmyIndiaPlaceDetailManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaPlaceDetailManager")
@interface MapmyIndiaPlaceDetailManager : NSObject
/// The shared MapmyIndiaPlaceDetailManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaPlaceDetailManager * _Nonnull sharedManager;)
+ (MapmyIndiaPlaceDetailManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaPlaceDetailManager object with an optional access token.
/// The MapmyIndiaPlaceDetailManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaPlaceDetailManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getPlaceDetailWithOptions:(MapmyIndiaPlaceDetailGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class NSCoder;

/// The <code>RectangularRegion</code> class defines a rectangular bounding box for a geographic region.
SWIFT_CLASS_NAMED("MapmyIndiaRectangularRegion")
@interface MapmyIndiaRectangularRegion : CLRegion
/// Coordinate at the bottomRight corner.
@property (nonatomic) CLLocationCoordinate2D bottomRight;
/// Coordinate at the northeast corner.
@property (nonatomic) CLLocationCoordinate2D topLeft;
/// Creates a rectangular region with the given southwest and northeast corners.
/// <code>southWest</code> must be to the southwest of <code>northEast</code>. The region may not span the antimeridian. If you need to restrict a query to a region that spans the antimeridian, such as the region that encompasses Fiji, perform two queries each limited to the region on either side of the antimeridian, then combine the results.
/// \param southWest The southwesternmost geographic coordinate that lies within the region.
///
/// \param northEast The northeasternmost geographic coordinate that lies within the region.
///
- (nonnull instancetype)initWithTopLeft:(CLLocationCoordinate2D)topLeft bottomRight:(CLLocationCoordinate2D)bottomRight OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns a Boolean value indicating whether the bounding box contains the specified coordinate.
- (BOOL)containsLocationCoordinate2D:(CLLocationCoordinate2D)coordinate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaReverseGeocodeOptions;

/// A MapmyIndiaReverseGeocodeManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/geocoding-api">MapmyIndia Geocoding API</a> for known places corresponding to a given location. The query may take the form of a geographic coordinate or a human-readable string.
/// The MapmyIndiaReverseGeocodeManager object allows you to perform both forward and reverse geocoding. <em>Forward geocoding</em> takes a human-readable query, such as a place name or address, and produces any number of geographic coordinates that correspond to that query. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
/// Each result produced by the MapmyIndiaReverseGeocodeManager object is stored in a <code>Placemark</code> object. Depending on your query and the available data, the placemark object may contain a variety of information, such as the name, address, region, or contact information for a place, or some combination thereof.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeManager")
@interface MapmyIndiaReverseGeocodeManager : NSObject
/// The shared MapmyIndiaReverseGeocodeManager object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaReverseGeocodeManager * _Nonnull sharedManager;)
+ (MapmyIndiaReverseGeocodeManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaReverseGeocodeManager object with an optional access token.
/// The MapmyIndiaReverseGeocodeManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaReverseGeocodeManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)reverseGeocodeWithOptions:(MapmyIndiaReverseGeocodeOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(NSArray<MapmyIndiaGeocodedPlacemark *> * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A structure that specifies the criteria for reverse geocoding results. <em>Reverse geocoding</em> takes a geographic coordinate and produces a hierarchy of places, often beginning with an address, that describes the coordinate’s location.
SWIFT_CLASS_NAMED("MapmyIndiaReverseGeocodeOptions")
@interface MapmyIndiaReverseGeocodeOptions : MapmyIndiaGeocodeOptions
/// Initializes a reverse geocode options object with the given coordinate pair.
/// \param coordinate A coordinate pair to search for.
///
- (nonnull instancetype)initWithCoordinate:(CLLocationCoordinate2D)coordinate withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
/// Initializes a reverse geocode options object with the given <code>CLLocation</code> object.
/// \param location A <code>CLLocation</code> object to search for.
///
- (nonnull instancetype)initWithLocation:(CLLocation * _Nonnull)location withRegion:(MMIRegionTypeIdentifier _Nonnull)withRegion;
@end

@class MapmyIndiaTripAdvice;

SWIFT_CLASS_NAMED("MapmyIndiaRouteTrip")
@interface MapmyIndiaRouteTrip : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, copy) NSArray<MapmyIndiaTripAdvice *> * _Nullable advices;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable length;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable pts;
@property (nonatomic, readonly, copy) NSString * _Nullable durationFormatted;
@property (nonatomic, readonly, copy) NSArray<NSValue *> * _Nullable coordinates;
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nullable locations;
/// The number of coordinates.
/// The value of this property may be zero or reduced depending on the object.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates.count</code> property.
@property (nonatomic, readonly) NSUInteger coordinateCount;
/// Retrieves the coordinates.
/// The array may be empty or simplified.
/// precondition:
/// <code>coordinates</code> must be large enough to hold <code>coordinateCount</code> instances of <code>CLLocationCoordinate2D</code>.
/// note:
/// This initializer is intended for Objective-C usage. In Swift code, use the <code>coordinates</code> property.
/// \param coordinates A pointer to a C array of <code>CLLocationCoordinate2D</code> instances. On output, this array contains all the vertices of the overlay.
///
- (void)getCoordinates:(CLLocationCoordinate2D * _Nonnull)coordinates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class MapmyIndiaRouteTripOptions;
@class MapmyIndiaTripResult;

/// A MapmyIndiaRouteTripManager object that allows you to query the <a href="https://www.mapmyindia.com/api/advanced-maps/doc/route-api">MapmyIndia route API</a>
/// The MapmyIndiaRouteTripManager object allows you to perform get route betwweeb locations.
SWIFT_CLASS_NAMED("MapmyIndiaRouteTripManager")
@interface MapmyIndiaRouteTripManager : NSObject
/// The shared object.
/// To use this object, a MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a> should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapmyIndiaRouteTripManager * _Nonnull sharedManager;)
+ (MapmyIndiaRouteTripManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token and host.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
/// \param host An optional hostname to the server API. The MapmyIndia Geocoding API endpoint is used by default.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey host:(NSString * _Nullable)host OBJC_DESIGNATED_INITIALIZER;
/// Initializes a newly created MapmyIndiaRouteTripManager object with an optional access token.
/// The MapmyIndiaRouteTripManager object sends requests to the MapmyIndia Geocoding API endpoint.
/// \param restKey A MapmyIndia <a href="http://www.mapmyindia.com/api/dashboard">rest key</a>. If an rest key is not specified when initializing the MapmyIndiaRouteTripManager object, it should be specified in the <code>MapmyIndiaRestKey</code> key in the main application bundle’s Info.plist.
///
- (nonnull instancetype)initWithRestKey:(NSString * _Nullable)restKey;
/// Submits a geocoding request to search for placemarks and delivers the results to the given closure.
/// This method retrieves the placemarks asynchronously over a network connection. If a connection error or server error occurs, details about the error are passed into the given completion handler in lieu of the placemarks.
/// Geocoding results may be displayed atop a MapmyIndia map.
/// \param options A <code>ForwardGeocodeOptions</code>, <code>ReverseGeocodeOptions</code> or ‘PlaceDetailGeocodeOptions’ object indicating what to search for.
///
/// \param completionHandler The closure (block) to call with the resulting placemarks. This closure is executed on the application’s main thread.
///
///
/// returns:
/// The data task used to perform the HTTP request. If, while waiting for the completion handler to execute, you no longer want the resulting placemarks, cancel this task.
- (NSURLSessionDataTask * _Nonnull)getResultWithOptions:(MapmyIndiaRouteTripOptions * _Nonnull)options completionHandler:(void (^ _Nonnull)(MapmyIndiaTripResult * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
/// The HTTP URL used to fetch the geocodes from the API.
- (NSURL * _Nonnull)urlForGeocoding:(MapmyIndiaRouteTripOptions * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaRouteTripOptions")
@interface MapmyIndiaRouteTripOptions : MapmyIndiaGeocodeOptions
/// A location provides the location from which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable startLocation;
/// A location provides the location to which the route will be calculated.
@property (nonatomic, strong) CLLocation * _Nullable destinationLocation;
/// locations via which route will be calculated
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable viaPoints;
@property (nonatomic) MMIDistanceRouteType routeType;
@property (nonatomic) MMIDistanceVehicleType vehicleType;
@property (nonatomic) MMIDistanceAvoidsType avoids;
@property (nonatomic) BOOL withAlternatives;
@property (nonatomic) BOOL withAdvices;
/// Initializes a forward geocode options object with the given query string.
/// \param query A place name or address to search for. The query may have a maximum of 20 words or numbers; it may have up to 256 characters including spaces and punctuation.
///
- (nonnull instancetype)initWithStartLocation:(CLLocation * _Nonnull)startLocation destinationLocation:(CLLocation * _Nonnull)destinationLocation;
@end




SWIFT_CLASS_NAMED("MapmyIndiaTrip")
@interface MapmyIndiaTrip : MapmyIndiaRouteTrip
@end

@class MapmyIndiaTripAdvicePoint;

SWIFT_CLASS_NAMED("MapmyIndiaTripAdvice")
@interface MapmyIndiaTripAdvice : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable exitNR;
@property (nonatomic, strong) NSNumber * _Nullable iconId;
@property (nonatomic, strong) NSNumber * _Nullable meters;
@property (nonatomic, strong) MapmyIndiaTripAdvicePoint * _Nullable point;
@property (nonatomic, strong) NSNumber * _Nullable seconds;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripAdvicePoint")
@interface MapmyIndiaTripAdvicePoint : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaTripResult")
@interface MapmyIndiaTripResult : NSObject
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, strong) NSNumber * _Nullable status;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable alternatives;
@property (nonatomic, copy) NSArray<MapmyIndiaTrip *> * _Nullable trips;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MapmyIndiaUtility")
@interface MapmyIndiaUtility : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)durationSecondsToFormattedString:(NSNumber * _Nonnull)seconds SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getUniqueDeviceIdentifierAsString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getOSVersion SWIFT_WARN_UNUSED_RESULT;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif

#endif
